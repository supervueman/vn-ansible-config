---
- hosts: all
  gather_facts: yes
  become: yes

  vars_files:
    - ../group_vars/global_vars.yml

  tasks:
    - name: Install common packages
      register: install_common_packages
      apt:
        name:
          - curl
          - gnupg2
          - git
          - python2
          - wget
          - python3-psycopg2

    - name: Add the gpg key for nodejs LTS
      register: add_gpg_nodejs_lts
      when: install_common_packages.changed
      apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        state: present

    - name: Install the nodejs LTS repos
      register: add_nodejs_lts_repos
      when: add_gpg_nodejs_lts.changed
      apt_repository:
        repo: deb https://deb.nodesource.com/node_{{ node_version }}.x {{ node_distribution_release }} main
        state: present
        update_cache: yes

    - name: Install the nodejs
      register: install_nodejs
      when: add_nodejs_lts_repos.changed
      shell: |
        curl -sL https://deb.nodesource.com/setup_{{node_version}}.x | sudo -E bash - && sudo apt-get install -y nodejs

    - name: Install pm2
      when: install_nodejs.changed or install_nodejs.skipped
      ignore_errors: True
      npm: name=pm2 global=yes production=yes

    - name: Install serve server
      when: install_nodejs.changed or install_nodejs.skipped
      ignore_errors: True
      npm: name=serve global=yes production=yes

    - name: Add gpg key and postgresql repository
      register: add_postgres_gpg_key_and_repositoty
      when: install_common_packages.changed
      shell: |
        wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -s

    - name: Add content repository to system
      register: add_content_repository_to_system
      when: add_postgres_gpg_key_and_repositoty.changed or add_postgres_gpg_key_and_repositoty.skipped
      shell: |
        echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" |sudo tee  /etc/apt/sources.list.d/pgdg.list

    - name: Install postgres
      register: install_postgres
      when: add_content_repository_to_system.changed or add_content_repository_to_system.skipped
      apt:
        name:
          - postgresql-{{postgresql_version}}
          - postgresql-client-{{postgresql_version}}

    - name: Ensure the PostgreSQL service is running
      register: start_postgres
      when: install_postgres.changed
      service: name=postgresql state=started enabled=yes
      ignore_errors: True

    - name: Create database
      register: create_database
      when:
        - install_postgres.changed
        - start_postgres.changed or start_postgres.skipped
      sudo_user: postgres
      postgresql_db:
        name: '{{ db_name }}'
        encoding: 'UTF8'
        lc_collate: 'en_US.UTF8'
        lc_ctype: 'en_US.UTF8'
        template: 'template0'
        state: present

    - name: Ensure user has access to the database
      register: create_postgres_user
      when: create_database.changed
      sudo_user: postgres
      postgresql_user:
        db: '{{ db_name }}'
        name: '{{ db_user }}'
        password: '{{ db_password }}'
        priv: ALL
        state: present

    - name: Ensure user does not have unnecessary privileges
      register: set_privileges_postgres_user
      when: create_postgres_user.changed
      sudo_user: postgres
      postgresql_user:
        name: '{{ db_user }}'
        role_attr_flags: NOSUPERUSER,NOCREATEDB
        state: present

    # Install nginx
    - name: Install nginx
      apt:
        name: nginx
        state: latest

    - name: Start nginx
      service:
        name: nginx
        state: started
